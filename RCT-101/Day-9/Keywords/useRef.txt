What is useRef?
use
useRef is a React Hook that lets you reference a value that’s not needed for rendering.

const ref = useRef(initialValue)

Usage
Referencing a value with a ref Call useRef at the top level of your component to
declare one or more refs.

import { useRef } from 'react';
function Stopwatch() {
const intervalRef = useRef(0);
// ...

useRef returns a ref object with a single current property initially set to the initial
value you provided.
On the next renders, useRef will return the same object. You can change its current
property to store information and read it later. This might remind you of state, but
there is an important difference.
Changing a ref does not trigger a re-render. This means refs are perfect for storing
information that doesn’t affect the visual output of your component. For example, if
you need to store an interval ID and retrieve it later, you can put it in a ref. To update
the value inside the ref, you need to manually change its current property:

function handleStartClick() {
const intervalId = setInterval(() => {
// ...
}, 1000);
intervalRef.current = intervalId;
}

Later, you can read that interval ID from the ref so that you can call


function handleStopClick() {
const intervalId = intervalRef.current;
clearInterval(intervalId);
}